# Ambient Watcher プロジェクト設定
# Codexプロジェクト用にカスタマイズされた設定

# レビュー全体の有効/無効
enabled = true

# 除外パターン（これらのファイルはレビューされません）
exclude_patterns = [
    "codex-rs/target/**",
    "node_modules/**",
    ".git/**",
    "dist/**",
    "build/**",
    "*.min.js",
    "*.min.css",
    "vendor/**",
    "*.lock",
    "codex-rs/*/target/**",
]

# ============================================
# レビュー設定
# ============================================

# 構文エラー・型エラーチェック
[[reviews]]
name = "構文エラー・型エラーチェック"
description = "コードの構文エラーと型の不一致を検出"
file_patterns = ["*.rs", "*.ts", "*.tsx", "*.js", "*.jsx", "*.py", "*.go"]
priority = 200
enabled = true
prompt = """
あなたはコードレビューアシスタントです。`{file_path}`を分析して、以下を日本語で報告してください：

1. 構文エラーの可能性がある箇所（未定義変数、括弧の不一致、セミコロン忘れなど）
2. 型の不一致の可能性
3. エラーがある場合は`{file_path}:行番号`の形式でリンクを提供

エラーがない場合は『構文エラーは見つかりませんでした』と答えてください。
"""

# セキュリティリスク検出
[[reviews]]
name = "セキュリティリスク検出"
description = "セキュリティ脆弱性とハードコードされた秘密情報を検出"
file_patterns = ["*"]
priority = 150
enabled = true
prompt = """
あなたはセキュリティエキスパートです。`{file_path}`を分析して、以下のセキュリティリスクを日本語で報告してください：

1. ハードコードされたAPIキー、パスワード、トークン
2. SQLインジェクション、XSSの脆弱性
3. 安全でない入力検証
4. エラー箇所は`{file_path}:行番号`形式で

リスクがない場合は『セキュリティリスクは見つかりませんでした』と答えてください。
"""

# パフォーマンス最適化
[[reviews]]
name = "パフォーマンス最適化"
description = "パフォーマンス問題と最適化の機会を検出"
file_patterns = ["*.rs", "*.go", "*.cpp", "*.c", "*.py"]
priority = 100
enabled = true
prompt = """
あなたはパフォーマンスエキスパートです。`{file_path}`を分析して、以下のパフォーマンス問題を日本語で報告してください：

1. O(n²)以上の計算量の処理
2. 不要なループやメモリリーク
3. より効率的な実装方法の提案
4. 問題箇所は`{file_path}:行番号`形式で

問題がない場合は『パフォーマンス問題は見つかりませんでした』と答えてください。
"""

# ============================================
# Codexプロジェクト専用レビュー
# ============================================

[[reviews]]
name = "Rustコード品質チェック"
description = "Rustのベストプラクティスと慣用的な書き方を確認"
file_patterns = ["codex-rs/**/*.rs"]
priority = 180
enabled = true
prompt = """
Rustエキスパートとして、`{file_path}`のコードをレビューしてください：

1. 不適切な`unwrap()`の使用（適切なエラーハンドリングを提案）
2. 借用チェッカーを回避するための不要なクローン
3. より慣用的なRustの書き方（イテレータ、パターンマッチングなど）
4. 未使用のimportや変数

問題箇所は`{file_path}:行番号`形式で指摘してください。
"""

[[reviews]]
name = "Claude Code統合チェック"
description = "Claude Codeとの統合に関する問題を検出"
file_patterns = ["codex-rs/cli/src/ambient*.rs", "codex-rs/cli/src/ambient_ui/**/*"]
priority = 250
enabled = true
prompt = """
Claude Code統合の観点から`{file_path}`をレビューしてください：

1. ユーザーエクスペリエンスを損なう可能性のある処理
2. エラーメッセージが不親切な箇所
3. 非同期処理の適切性（ブロッキング処理がないか）
4. Web UI との通信の信頼性

改善提案を`{file_path}:行番号`形式で提供してください。
"""

# ============================================
# カスタムプロンプト（別ファイルから読み込む場合）
# ============================================

# [[custom_prompts]]
# id = "architecture_review"
# content = """
# アーキテクチャレビューのプロンプト...
# """
